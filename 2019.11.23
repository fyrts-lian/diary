继续写昨天没写完的专业课复习：
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
new和delete：
    【注意：】new和delete是【运算符】，不是【函数】！
    ★new和delete的功能：
        New会开辟一块地址，这块地址是在堆区的，而不是栈区（堆是啥？堆和栈啥区别？）。即使函数运行结束，该内存也不会被释放。
        所以需要我们手动使用delete、free来释放内存。
    ★new开辟的地址与普通变量开辟的地址的区别：
		    以int为例子，int开辟的内存在栈区，函数结束之后就会释放掉。		
    ★new运算符的使用格式：
		    new 类型 [初值]   ps：分配数组空间的时候不能指定初值；
				    例：（又是偷的课本的例子233）
						    new int （100）；//开辟一个整数空间，该整数初值为100，返回该元素的地址；
                char *a=new char [10];//开辟一个存放字符数组的空间，返回首元素的地址，将地址赋给指向字符类型的指针a；
                float *p=new float(3.14159);//开辟一个单精度数的空间，该数初值为3.14159，将 返回的，该元素的地址 赋给 指
                                              向单精度数的指针p
    ★delete运算符的使用格式：
        delete 指针变量；  //对变量 
        delete []指针变量；//对数组
            例：delete p；  //对应上文中的单精度数的例子
                delete []a；
    ★new和delete的综合应用：（抄的课本！）
        例：（假设已经声明了结构体类型student（成员包括num和name））
            int main()
            {
              student *p;
              p=new student;
              p->num=233;
              p->name="ersansan";
              cout<<p->num<<" "<<p->name<<endl;
              delete p;
              return 0;
            }
            运行之后会输出：
            233 erssansan
         由此可见：
         【想要访问new开辟的空间，无法使用变量名实现，只能用指针变量操作】
————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
枚举类型：
   ★为啥使用枚举类型？
      如果一个变量只能有几种可能的值，可以定义为枚举类型。（比如定义一个变量a，想让它只能有"er"或者"sansan"这两个值，就可以定义它为枚举类型）
   ★枚举类型的使用：
      1.enum 枚举类型名 {枚举常量表}; //ps:“枚举常量”，是常量，不可以把它们当作变量，它们是有默认的值的（其值为整数），依次为0,1,2,3……
        枚举类型名 变量名
          例：enum flag {er,sansan};
              flag a=er;//定义一个flag枚举类型的变量a，赋值为er；
      2.enum 枚举类型名 {枚举常量表} 变量名；
          例：enum flag {er,sansan} a=er;
   ★注意事项：
      1.如上文所说，枚举常量是有值的，所以枚举常量之间可以比较大小；
      2.枚举常量在没有赋初值的情况下，按照从0到n的顺序指定值；但我们可以对其进行值的指定，指定的常量之后的常量，依次递增……
          例子：enum flag {bian，cheng=6，shi，ren，tu=1，tou}
                则：bian =0，cheng=6，shi=7，ren=8，tu=1，tou=2;
      3.枚举常量不能是整数或者字符，只能以标识符的形式。
          例子：enum flag {1,2,3};          【X】
                enum flag {'1','2','3'};   【X】
      4.枚举变量可以直接输出，但是输出的值是“相应枚举常量对应的值”，而非“相应的枚举常量”；
—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
typedef 声明新的类型名：
    ★typedef的用法：
    teypedef 
    
    
    累了，晚上继续写
              
         
