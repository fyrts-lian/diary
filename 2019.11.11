昨天忘记写日记了233
记录一下这两天（字面意义上的11.10与11.11两天）学到的玩意儿：
1.昨天翻看教材（谭浩强c++第三版），定义二维数组的时候说可以不指定“行”的长度（例如：int a[][11]={1,1,1,1}），尝试了一下，也的确如此。
  但是我在尝试删除语句中的赋值部分（直接写成int a[][11];）后，程序报错了，说是什么“error C2133: “a”: 未知的大小”，奇怪。为什么？
2.昨天的日记中写到了“关于\0，\n，0，eof的联系与介绍”，今天在网上闲逛的时候，听说：eof是在文件读取结束才会出现，所以：
  利用while (printf("%d",&a)!=EOF)这个循环语句实现多组数据的输入的时候，实际上应该是一个无限循环吧？！ಠᴗಠ？这玩意儿没我想象中高端啊233
3.【今天学习指针了!】
   在这里重新打一遍笔记和重点好了233：
   1)什么是指针？
   指针就是地址，二者等价。指定某个内存单元，这个内存单元有两个数：它的地址和它的值（这句话是我自己编的233，万一说错了就当无事发生orz）
   2)变量值的存取，都是通过【地址】进行的：又分为直接存取以及间接存取：
      直接存取：我理解为：按照地址找到内存单元，取值；
      间接存取：我理解为：找到存取地址的内存单元，再根据存储的存取地址找到目标内存单元，取值；
      因此间接存取比直接存取多了一个：取地址  这个过程，而存储这个地址的变量，就叫做：“指针变量”。
      ps：由此可知，指针以及指针变量是完全不同的两个概念，二者不可混为一谈！一个变量的地址就称作该变量的指针，指针变量专门用来存储地址
          怎么存储地址呢？取址符& （对于变量a，&a就是变量a的存储单元的起始地址）
   3)怎么定义一个指针变量呢？
     格式：基类型*指针变量名：
     如：    int * a；
     ps：*  有两种含义，一是“指针运算符”，一是“用在定义阶段，表示定义的变量是指针变量”，上行的例子，*代表第二种含义。
   4)指针变量的注意事项：
      一.定义阶段，不要忘记指定基类型（因为指针变量只能指向与自己同类型的变量）；
      二.赋值阶段，不可以直接用整数给指针变量赋值（如：int *a=1111【错】   int *a=&i【对】），可以将已定义的变量的地址作为指针变量的初值。
      三.闲着没事，描述阶段（误）:描述指针变量a，应该这么说：a是指向____型数据的指针变量（即一定要把基类型说出来）。
   5)容易弄糊涂的地方：
      依旧拿上文的指针变量a举例子：a是指针变量，存储的是已定义变量的地址。*a是a指向的已定义变量（假设a=&i，那么*a等价于i）
      int *a=&i，此处千万不要把*当作“指针运算符”，此处的*是上文讲过的，第二种含义！
   6)指针与数组：
     一.区分【数组指针】和【指针数组】：int (*a) [1111]，这是数组指针（假设a=&i，那么该数组等价于i[n]）；
                                       int *a [1111]  ，这是指针数组（该数组里面的所有元素，都是指针变量）。
     二.数组名本身就是一个地址（int i[1111],则i作为一个指针变量，指向i数组的第一个元素的地址（i[0]的地址），且【不可以被更改】）
        因此，也就解释了之前学过的函数中说的，“以数组作为形参，数组退化为指针变量（大概就是这么个意思，记不清了233），该数组的长度无实际意义”
        举一反三，我们就可以使用三种方法描述一个数组：举个例子：对于i[1],第一种描述：i[1](废话）；第二种描述：*（i+1），第三种描述：*（a+1）
        第二种描述和第三种描述还需要有注意事项：如上文所言，i固定指向i[0]的地址，不可以被修改（如：令i+1这种操作）；
                                                          p指向的地址是我们规定的，p可以修改（如：令p+1，则意味着p指向i[2]），而且p可以超出
                                                          数组的界限，而不被编译器报错（如：令p+1112，虽然超出数组范围，但是语句本身没有问题）
   7)指针的应用：用于在其他函数中，对主函数的变量做出修改（实际上应该有更广泛的作用，但是这条最明显，就先写这一条得了233）
